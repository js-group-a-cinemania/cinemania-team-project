{"version":3,"file":"main-655yUiPv.js","sources":["../../src/js/storage.js","../../src/js/catalog.js","../../src/js/library.js","../../src/js/init.js","../../src/js/upcoming.js"],"sourcesContent":["const LIBRARY_KEY = \"myLibrary\";\n\n// **Kütüphanedeki Filmleri Getir**\nexport function getLibraryMovies() {\n    return JSON.parse(localStorage.getItem(LIBRARY_KEY)) || [];\n}\n\n// **Filmi Kütüphaneye Ekle**\nexport function addMovieToLibrary(movie) {\n    console.log(`📌 Film ekleniyor: ${movie.title}`);\n    \n    let movies = getLibraryMovies();\n    if (!movies.some(m => m.id === movie.id)) {\n        movies.push(movie);\n        localStorage.setItem(\"myLibrary\", JSON.stringify(movies));\n        \n        console.log(\"✅ Film başarıyla eklendi!\", getLibraryMovies()); // ✅ **Test Logu**\n        Swal.fire({\n            title: `${movie.title} Added to Library! 🎬`,\n            icon: \"success\",\n            confirmButtonText: \"OK\",\n            confirmButtonColor: \"#ff9800\", // 🍊 Turuncu buton\n            timer: 2500, // ⏳ 2.5 saniye sonra kapanır\n            toast: true,\n            showCloseButton: true,\n        });\n\n        // 📌 **My Library Sayfasını Güncelle**\n        if (window.location.pathname.includes(\"mylibrary.html\")) {\n            displayLibraryMovies();\n        }\n    } else {\n        console.log(\"⚠️ Film zaten kütüphanede!\", getLibraryMovies());\n        alert(`${movie.title} is already in My Library!`);\n    }\n}\n\n// **Filmi Kütüphaneden Sil**\nexport function removeMovieFromLibrary(movieId) {\n    let movies = getLibraryMovies();\n    const movie = movies.find(m => m.id === movieId); // Kaldırılacak filmi bul\n\n    if (!movie) return; // Eğer film yoksa işlem yapma\n\n    movies = movies.filter(m => m.id !== movieId);\n    localStorage.setItem(LIBRARY_KEY, JSON.stringify(movies));\n\n    // ✅ **SweetAlert ile kaldırma bildirimi**\n    Swal.fire({\n    \n        text: `${movie.title} has been removed from your library.`,\n        icon: \"error\",\n        timer: 2000,\n        showConfirmButton: false,\n    });\n\n    // 📌 **Library Sayfasını Güncelle**\n    if (window.location.pathname.includes(\"mylibrary.html\")) {\n        displayLibraryMovies();\n    }\n}\n\n\n// **Film Kütüphanede Var mı?**\nexport function isMovieInLibrary(movieId) {\n    let movies = getLibraryMovies();\n    return movies.some(m => m.id === movieId);\n}\n\n// **Film Kütüphaneye Eklendi Mi? Toggle İşlemi**\nexport function toggleLibrary(movie) {\n    let movies = getLibraryMovies();\n    if (movies.some(m => m.id === movie.id)) {\n        removeMovieFromLibrary(movie.id);\n        return \"Add to Library\";\n    } else {\n        addMovieToLibrary(movie);\n        return \"Remove from Library\";\n    }\n}\n","import { getLibraryMovies, toggleLibrary } from './storage.js';\n\n\ndocument.addEventListener('DOMContentLoaded', async () => {\n  await fetchGenres();\n  // Türleri yükle\n});\n\nconsole.log('📌 library.js yüklendi mi?', getLibraryMovies()); // ✅ TEST LOGU\n//! DARK MODE-LIGHT MODE\n\ndocument.addEventListener('DOMContentLoaded', function () {\n  const toggle = document.getElementById('darkmode-toggle');\n  const body = document.body;\n\n  if (localStorage.getItem('darkMode') === 'enabled') {\n    body.classList.add('dark-mode');\n    toggle.checked = true;\n  }\n\n  toggle.addEventListener('change', function () {\n    if (this.checked) {\n      body.classList.add('dark-mode');\n      localStorage.setItem('darkMode', 'enabled');\n    } else {\n      body.classList.remove('dark-mode');\n      localStorage.setItem('darkMode', 'disabled');\n    }\n  });\n});\ndocument.addEventListener('DOMContentLoaded', () => {\n  const yearDropdown = document.querySelector('.year-dropdown');\n  if (!yearDropdown) {\n    console.error('Hata: Year dropdown elementi HTML içinde bulunamadı!');\n    return;\n  }\n  yearDropdown.addEventListener('change', async function () {\n    const selectedYear = this.value;\n    console.log(`📅 ${selectedYear} yılına ait filmler listeleniyor...`);\n    await fetchMoviesByYear(selectedYear);\n  });\n});\n//! DARK MODE-LIGHT MODE SONU\n\nconst apiKey = '9a0d30072ad38e4a4c69d8b167f5dfc1';\nconst baseUrl = 'https://api.themoviedb.org/3';\nconst IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\ndocument.addEventListener('DOMContentLoaded', async () => {\n  await fetchTrendingMovies(); // Filmleri çek\n  await populateYearDropdown(); // Yılları çek\n});\ndocument.addEventListener('DOMContentLoaded', () => {\n  populateYearDropdown(); // Sayfa yüklendiğinde yılları ekle\n});\n\nfunction populateYearDropdown() {\n  const yearDropdown = document.querySelector('.year-dropdown');\n  if (!yearDropdown) {\n    console.error('Year dropdown elementi bulunamadı!');\n    return;\n  }\n\n  const currentYear = new Date().getFullYear(); // Şu anki yıl\n  const startYear = 1900; // Filmler için en erken yıl\n\n  // Varsayılan seçeneği ekle\n  yearDropdown.innerHTML = `<option value=\"\">Year</option>`;\n\n  for (let year = currentYear; year >= startYear; year--) {\n    const option = document.createElement('option');\n    option.value = year;\n    option.textContent = year;\n    yearDropdown.appendChild(option);\n  }\n}\ndocument\n  .querySelector('.year-dropdown')\n  .addEventListener('change', async function () {\n    const selectedYear = this.value;\n\n    if (selectedYear) {\n      console.log(`📅 ${selectedYear} yılına ait filmler listeleniyor...`);\n      await fetchMoviesByYear(selectedYear);\n    }\n  });\n\n// **Belirli bir yılın filmlerini API'den çek**\nasync function fetchMoviesByYear(year) {\n  const apiKey = '9a0d30072ad38e4a4c69d8b167f5dfc1';\n  const baseUrl = 'https://api.themoviedb.org/3';\n\n  try {\n    const response = await fetch(\n      `${baseUrl}/discover/movie?api_key=${apiKey}&primary_release_year=${year}`\n    );\n    const data = await response.json();\n\n    if (data.results.length > 0) {\n      displayMovies(data.results); // Filmleri ekrana yazdır\n    } else {\n      console.warn(`❌ ${year} yılına ait film bulunamadı.`);\n      document.querySelector(\n        '.gallery-movies'\n      ).innerHTML = `<p>No movies found for ${year}</p>`;\n    }\n  } catch (error) {\n    console.error(\"API'den film listesi alınırken hata oluştu:\", error);\n  }\n}\n\n// **API’de gerçekten film olan yılları getir**\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const galleryMovies = document.querySelector('.gallery-movies'); // Film listesi\n  const modal = document.getElementById('movie-modal'); // Modal arkaplan\n  const modalContent = document.querySelector('.modal-movie-info-container'); // Modal içeriği\n  const closeModalButton = document.getElementById('close-modal'); // Modal kapatma butonu\n\n  if (!galleryMovies || !modal || !modalContent || !closeModalButton) {\n    console.error('Modal veya film galerisi elementi bulunamadı!');\n    return;\n  }\n\n  // **Filme tıklama event listener ekle**\n  // **Filme tıklama event listener ekle**\n  galleryMovies.addEventListener('click', async event => {\n    event.preventDefault();\n\n    const movieCard = event.target.closest('.gallery-movies-item'); // Film kartını bul\n    if (!movieCard) {\n      console.warn('Tıklanan öğe bir film kartı değil!');\n      return;\n    }\n\n    const movieId = movieCard.dataset.id; // Filmin ID'sini al\n    if (!movieId) {\n      console.error('Film ID bulunamadı!');\n      return;\n    }\n\n    console.log('Tıklandı, film ID:', movieId); // **Hata Ayıklama İçin**\n\n    try {\n      const movieData = await fetchMovieDetails(movieId); // API'den film detaylarını çek\n      showModal(movieData);\n    } catch (error) {\n      console.error('Film detayları yüklenirken hata oluştu:', error);\n    }\n  });\n\n  // **Modal açma fonksiyonu**\n  function showModal(movie) {\n    const modal = document.getElementById('movie-modal');\n    const modalContent = document.querySelector('.modal-movie-info-container');\n\n    modalContent.innerHTML = `\n    <h2 class=\"modal-title\">${movie.title || 'Unknown Title'}</h2>\n    <img height=\"500\" class=\"modal-poster\" src=\"${\n      movie.poster_path\n        ? `https://image.tmdb.org/t/p/w500${movie.poster_path}`\n        : './img/no-image.png'\n    }\" alt=\"${movie.title}\" />\n    <p><strong>Overview:</strong> ${\n      movie.overview || 'No description available.'\n    }</p>\n    <p><strong>Genres:</strong> ${\n      movie.genres?.map(g => g.name).join(', ') || 'Unknown'\n    }</p>\n    <p><strong>Release Date:</strong> ${movie.release_date || 'Unknown'}</p>\n    <button id=\"add-to-library-btn\" class=\"library-button\">${\n      getLibraryMovies().some(m => m.id === movie.id)\n        ? '❌ Remove from Library'\n        : '📚 Add to Library'\n    }</button>\n  `;\n\n    modal.style.display = 'flex';\n    modal.classList.add('open');\n\n    // 📌 Butona event listener ekle\n    const addToLibraryBtn = document.getElementById('add-to-library-btn');\n    if (addToLibraryBtn) {\n      addToLibraryBtn.addEventListener('click', () => {\n        console.log('📌 Add to Library butonuna tıklandı!');\n        toggleLibrary(movie, addToLibraryBtn);\n      });\n    } else {\n      console.error('❌ Add to Library butonu bulunamadı!');\n    }\n  }\n\n  // **Hero kısmındaki 'More details' butonuna tıklama event listener ekle**\n  document\n    .querySelector('.hero-text-container')\n    .addEventListener('click', async event => {\n      if (event.target && event.target.classList.contains('js-details-btn')) {\n        const movieId = event.target.dataset.id; // Film ID'sini al\n        if (!movieId) {\n          console.error('Film ID bulunamadı!');\n          return;\n        }\n\n        try {\n          const movieData = await fetchMovieDetails(movieId); // API'den film detaylarını çek\n          showModal(movieData); // Film detayları ile modalı göster\n        } catch (error) {\n          console.error('Film detayları yüklenirken hata oluştu:', error);\n        }\n      }\n    });\n\n  // **Modalı kapatma event'leri**\n  closeModalButton.addEventListener('click', () => {\n    modal.style.display = 'none';\n    modal.classList.remove('open');\n  });\n\n  // **Modal dışına tıklanınca kapatma**\n  modal.addEventListener('click', event => {\n    if (event.target === modal) {\n      modal.style.display = 'none';\n      modal.classList.remove('open');\n    }\n  });\n\n  // **Escape tuşuna basınca modalı kapat**\n  document.addEventListener('keydown', event => {\n    if (event.key === 'Escape') {\n      modal.style.display = 'none';\n      modal.classList.remove('open');\n    }\n  });\n\n  // **Film detaylarını API'den al**\n  async function fetchMovieDetails(movieId) {\n    const apiKey = '9a0d30072ad38e4a4c69d8b167f5dfc1';\n    const response = await fetch(\n      `https://api.themoviedb.org/3/movie/${movieId}?api_key=${apiKey}`\n    );\n    const data = await response.json();\n\n    console.log(\"🎥 API'den Gelen Film Verisi:\", data); // **EKLENDİ**\n\n    return data;\n  }\n});\n\n// ! **Hero kısmını göster**\n\nfunction displayHeroMovie(movie) {\n  const { title, backdrop_path, vote_average, overview, id } = movie;\n  const container = document.querySelector('.hero-text-container');\n  container.innerHTML = `\n    <div class=\"image-container\">\n        <img class=\"section-hero-img\" src=\"${IMG_URL}${backdrop_path}\" alt=\"${title}\">\n        <div class=\"gradient-container\"></div>\n    </div>\n    <div class=\"section-hero-content\">\n        <h1 class=\"title section-hero-title\">${title}</h1>\n        <p class=\"star-rating-hero\">${starRatingCalc(vote_average)}</p>\n        <p class=\"text hero-text\">${overview}</p>\n        <ul class=\"btn-list\">\n            <li><button class=\"btn js-trailer-btn\" data-id=\"${id}\">Watch trailer</button></li>\n            <li><button class=\"btn-details js-details-btn\" data-id=\"${id}\">More details</button></li>\n        </ul>\n        <div class=\"background-container\"></div>\n    </div>\n  `;\n}\n\nlet genreMap = {};\n\n// **Film türlerini çek ve kaydet**\nasync function fetchGenres() {\n  try {\n    const response = await fetch(\n      `${baseUrl}/genre/movie/list?api_key=${apiKey}`\n    );\n    const data = await response.json();\n\n    data.genres.forEach(genre => {\n      genreMap[genre.id] = genre.name;\n    });\n  } catch (error) {\n    console.error('Film türleri alınırken hata oluştu:', error);\n  }\n}\n\n// **Trend Filmleri Listele**\nasync function fetchTrendingMovies() {\n  await fetchGenres(); // Türleri çek\n  const response = await fetch(\n    `${baseUrl}/trending/movie/week?api_key=${apiKey}`\n  );\n  const data = await response.json();\n\n  if (data.results.length > 0) {\n    displayHeroMovie(data.results[0]); // İlk filmi Hero bölümüne ekle\n    displayMovies(data.results); // Filmleri listele\n  }\n}\n\n// **Filmleri Ekrana Yazdır**\nfunction displayMovies(movies) {\n  const container = document.querySelector('.gallery-movies');\n  container.innerHTML = movies\n    .map(\n      ({ title, poster_path, vote_average, id, release_date, genre_ids }) => {\n        const year = release_date ? release_date.split('-')[0] : 'Unknown';\n        const starRating = starRatingCalc(vote_average);\n\n        // **Tür ID'lerini isimlere çevir**\n        const genres = genre_ids\n          .map(id => genreMap[id] || 'Unknown')\n          .join(', ');\n\n        return `\n        <li class=\"gallery-movies-item\" data-id=\"${id}\">\n          <img class=\"gallery-movies-img\" src=\"https://image.tmdb.org/t/p/original/${poster_path}\" alt=\"${title}\" loading=\"lazy\">\n          <div class=\"gallery-movies-overlay js-modal-info\" data-id=\"${id}\"></div>\n          <div class=\"gallery-movies-description\">\n            <h3 class=\"gallery-movies-title\">${title}</h3>\n            <div class=\"gallery-movies-wrap\">\n              <p class=\"gallery-movies-details\">${genres} | ${year}</p>\n            </div>\n          </div>\n          <div class=\"star-rating\">${starRating}</div>\n        </li>\n      `;\n      }\n    )\n    .join('');\n}\n\n// **Yıldız Puanı Hesapla**\nexport function starRatingCalc(vote_average) {\n  const stars = Math.round(vote_average / 2);\n  return '★'.repeat(stars) + '☆'.repeat(5 - stars);\n}\n\n// **Sayfa Yüklendiğinde Çalıştır**\ndocument.addEventListener('DOMContentLoaded', () => {\n  fetchTrendingMovies();\n});\n\n//! MOBIL MENU\ndocument.addEventListener('DOMContentLoaded', function () {\n  const menuToggle = document.getElementById('menu-toggle');\n  const mobilMenu = document.getElementById('mobil');\n  const backdrop = document.getElementById('backdrop');\n  const mobilNav = document.getElementById('mobil-nav');\n\n  menuToggle.addEventListener('click', function (event) {\n    event.preventDefault();\n    mobilMenu.classList.add('active');\n    backdrop.classList.add('active');\n    mobilNav.style.display = 'block';\n  });\n\n  document.addEventListener('click', function (event) {\n    const isClickInsideMenu = mobilMenu.contains(event.target);\n    const isClickOnMenuToggle = menuToggle.contains(event.target);\n\n    if (!isClickInsideMenu && !isClickOnMenuToggle) {\n      mobilMenu.classList.remove('active');\n      backdrop.classList.remove('active');\n    }\n  });\n});\n\n//! MOBIL MENU SON\n\n//!MOVIE SEARCH\n\ndocument.addEventListener('DOMContentLoaded', function () {\n  const searchForm = document.getElementById('search-form');\n  const searchInput = document.getElementById('form-input');\n  const searchInput2 = document.querySelector('.search-input2');\n  const closeIcon = document.querySelector('.close-icon');\n  const movieContainer = document.querySelector('.catalog-movie-container');\n\n  searchForm.addEventListener('submit', async function (event) {\n    event.preventDefault();\n    const query = searchInput.value.trim();\n    if (query) {\n      await searchMovies(query);\n      searchInput2.value = query;\n    }\n  });\n\n  closeIcon.addEventListener('click', function () {\n    searchInput2.value = '';\n  });\n\n  async function searchMovies(query) {\n    try {\n      const response = await fetch(\n        `${baseUrl}/search/movie?api_key=${apiKey}&query=${query}`\n      );\n      const data = await response.json();\n      if (data.results.length > 0) {\n        displayMovies(data.results);\n      } else {\n        movieContainer.innerHTML =\n          '<p class=\"no-results\">OOPS...<br>We are very sorry!<br>We don’t have any results matching your search.</p>';\n      }\n    } catch (error) {\n      console.error('Hata:', error);\n    }\n  }\n});\n\n//!MOVIE SEARCH SONU\n\n//! PAGINATION KISMI\n\nconst paginationContainer = document.getElementById('pagination-container');\nlet currentPage = 1;\nconst maxPagesToFetch = 500;\nlet totalPages = 1;\n\nasync function fetchMovies(page = 1) {\n  try {\n    if (page > maxPagesToFetch) {\n      console.error(`Maksimum ${maxPagesToFetch} sayfayı geçemezsiniz.`);\n      return;\n    }\n\n    const response = await fetch(\n      `${baseUrl}/movie/popular?api_key=${apiKey}&page=${page}`\n    );\n    const data = await response.json();\n\n    totalPages = Math.min(data.total_pages, maxPagesToFetch);\n    displayMovies(data.results);\n    renderPagination();\n  } catch (error) {\n    console.error(\"API'den veri alınırken hata oluştu:\", error);\n  }\n}\n\nfunction renderPagination() {\n  paginationContainer.innerHTML = '';\n\n  let paginationHTML = ``;\n  if (currentPage > 1) {\n    paginationHTML += `\n      <button class=\"pagination-btn\" onclick=\"changePage(1)\">&laquo;</button>\n    `;\n  }\n\n  if (currentPage > 1) {\n    paginationHTML += `\n      <button class=\"pagination-btn\" onclick=\"changePage(${\n        currentPage - 1\n      })\">&lt;</button>\n    `;\n  }\n\n  if (currentPage > 3) {\n    paginationHTML += `<span class=\"pagination-dots\">...</span>`;\n  }\n\n  for (\n    let i = Math.max(1, currentPage - 1);\n    i <= Math.min(totalPages, currentPage + 1);\n    i++\n  ) {\n    paginationHTML += `\n      <button class=\"pagination-btn ${\n        currentPage === i ? 'active' : ''\n      }\" onclick=\"changePage(${i})\">${i}</button>\n    `;\n  }\n\n  if (currentPage < totalPages - 2) {\n    paginationHTML += `<span class=\"pagination-dots\">...</span>`;\n  }\n\n  if (currentPage < totalPages) {\n    paginationHTML += `\n      <button class=\"pagination-btn\" onclick=\"changePage(${\n        currentPage + 1\n      })\">&gt;</button>\n    `;\n  }\n\n  if (currentPage < totalPages) {\n    paginationHTML += `\n      <button class=\"pagination-btn\" onclick=\"changePage(${totalPages})\">&raquo;</button>\n    `;\n  }\n\n  paginationContainer.innerHTML = paginationHTML;\n}\n\nwindow.changePage = function (page) {\n  if (page < 1 || page > totalPages) return;\n  currentPage = page;\n  fetchMovies(page);\n};\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  fetchMovies();\n});\n\n//! PAGINATION SONU\n\n//! TRAILER MODAL\ndocument.addEventListener('DOMContentLoaded', () => {\n  document.addEventListener('click', async event => {\n    const trailerBtn = event.target.closest('.js-trailer-btn');\n    if (trailerBtn) {\n      const movieId = trailerBtn.dataset.id;\n      console.log(`🎬 Fragman açılıyor, Film ID: ${movieId}`);\n      await openTrailerModal(movieId);\n    }\n  });\n\n  async function openTrailerModal(movieId) {\n    const modal = document.querySelector('.trailer-modal');\n    const iframe = document.getElementById('trailer-frame');\n    const backdrop = document.querySelector('.backdrop-trailer');\n\n    try {\n      const response = await fetch(\n        `https://api.themoviedb.org/3/movie/${movieId}/videos?api_key=${apiKey}`\n      );\n      const data = await response.json();\n\n      const trailer = data.results.find(video => video.type === 'Trailer');\n      if (trailer) {\n        iframe.src = `https://www.youtube.com/embed/${trailer.key}`;\n        modal.style.display = 'flex';\n        backdrop.style.display = 'block';\n        modal.classList.add('show');\n      } else {\n        alert('Fragman bulunamadı!');\n      }\n    } catch (error) {\n      console.error('Fragman yüklenirken hata oluştu:', error);\n    }\n  }\n\n  function closeModal() {\n    const modal = document.querySelector('.trailer-modal');\n    const iframe = document.getElementById('trailer-frame');\n    const backdrop = document.querySelector('.backdrop-trailer');\n\n    modal.classList.remove('show');\n    backdrop.style.display = 'none';\n    iframe.src = '';\n  }\n\n  document.addEventListener('click', closeModal);\n\n  document.addEventListener('keydown', event => {\n    if (event.key === 'Escape') {\n      closeModal();\n    }\n  });\n\n  document.querySelector('.trailer-modal').addEventListener('click', event => {\n    event.stopPropagation();\n  });\n});\n","const LIBRARY_KEY = 'myLibrary';\n\nexport function getLibraryMovies() {\n  return JSON.parse(localStorage.getItem(LIBRARY_KEY)) || [];\n}\n\nexport function addMovieToLibrary(movie) {\n  console.log(`📌 Film ekleniyor: ${movie.title}`); // ✅ **Test Logu**\n  let movies = getLibraryMovies();\n  if (!movies.some(m => m.id === movie.id)) {\n    movies.push(movie);\n    localStorage.setItem(LIBRARY_KEY, JSON.stringify(movies));\n    console.log('✅ Film başarıyla eklendi!', getLibraryMovies()); // ✅ **Test Logu**\n    alert(`${movie.title} added to My Library! 🎬`);\n\n    displayLibraryMovies(); // 📌 Library'yi güncelle\n  } else {\n    console.log('⚠️ Film zaten kütüphanede!', getLibraryMovies()); // ✅ **Test Logu**\n    alert(`${movie.title} is already in My Library!`);\n  }\n}\nexport function removeMovieFromLibrary(movieId) {\n  let movies = getLibraryMovies().filter(m => m.id !== movieId);\n  localStorage.setItem(LIBRARY_KEY, JSON.stringify(movies));\n  console.log(`❌ Movie ID ${movieId} removed from Library!`);\n}\n\nexport function displayLibraryMovies() {\n  const libraryContainer = document.querySelector('.library-movies'); // ✅ Doğru class kullanılıyor mu?\n  const emptyLibraryMessage = document.querySelector('.empty-library-message');\n\n  if (!libraryContainer || !emptyLibraryMessage) {\n    console.error('❌ Library container veya boş mesaj elementi bulunamadı!');\n    return;\n  }\n\n  let libraryMovies = getLibraryMovies();\n\n  if (libraryMovies.length === 0) {\n    emptyLibraryMessage.style.display = 'block';\n    libraryContainer.innerHTML = '<p>No movies in My Library yet!</p>';\n    return;\n  } else {\n    emptyLibraryMessage.style.display = 'none';\n  }\n\n  // 📌 **Filmleri Listeye Ekleme**\n  libraryContainer.innerHTML = libraryMovies\n    .map(\n      movie => `\n        <li class=\"movie-card\" data-id=\"${movie.id}>\n            <img class =\"library-movies-img\" src=\"https://image.tmdb.org/t/p/original${movie.poster_path}\" alt=\"${movie.title}\">\n            <div class=\"library-movies-overlay\" data-id=\"${movie.id}></div>\n            <div class=\"library-movies-description\" ><h3 class=\"library-movies-title\">${movie.title}</h3>\n            <p class=\"library-movies-details\"><strong>Release Date:</strong> ${movie.release_date}</p></div>\n            <div class=\"library-remove-btn\"><button class=\"library-btn\" data-id=\"${movie.id}\">Remove Add Library</button></div>\n        </li>\n    `\n    )\n    .join('');\n\n  // 📌 **Remove butonlarına event listener ekle**\n  document.querySelectorAll('.library-btn').forEach(button => {\n    button.addEventListener('click', event => {\n      const movieId = Number(event.target.dataset.id);\n      removeMovieFromLibrary(movieId);\n      displayLibraryMovies(); // Listeyi güncelle\n    });\n  });\n}\n\n//! MOBIL MENU\ndocument.addEventListener('DOMContentLoaded', function () {\n  const menuToggle = document.getElementById('menu-toggle');\n  const mobilMenu = document.getElementById('mobil');\n  const backdrop = document.getElementById('backdrop');\n  const mobilNav = document.getElementById('mobil-nav');\n\n  menuToggle.addEventListener('click', function (event) {\n    event.preventDefault();\n    mobilMenu.classList.add('active');\n    backdrop.classList.add('active');\n    mobilNav.style.display = 'block';\n  });\n\n  document.addEventListener('click', function (event) {\n    const isClickInsideMenu = mobilMenu.contains(event.target);\n    const isClickOnMenuToggle = menuToggle.contains(event.target);\n\n    if (!isClickInsideMenu && !isClickOnMenuToggle) {\n      mobilMenu.classList.remove('active');\n      backdrop.classList.remove('active');\n    }\n  });\n});\n\n// 📌 Tür Filtresini Dolduran Fonksiyon\nfunction populateGenreFilter() {\n  const genreFilter = document.getElementById('genreFilter');\n  if (!genreFilter) return; // 📌 Eğer Library sayfasında değilsek çalışmasın\n\n  let movies = JSON.parse(localStorage.getItem('myLibrary')) || [];\n  let genres = new Set();\n\n  // 📌 Kayıtlı Filmlerin Türlerini Al\n  movies.forEach(movie => {\n    if (movie.genres) {\n      movie.genres.forEach(g =>\n        genres.add(JSON.stringify({ id: g.id, name: g.name }))\n      );\n    }\n  });\n\n  // 📌 Dropdown'u Temizle ve Yeni Seçenekleri Ekle\n  genreFilter.innerHTML = `<option value=\"all\">All Genres</option>`;\n  genres.forEach(g => {\n    let genre = JSON.parse(g);\n    genreFilter.innerHTML += `<option value=\"${genre.id}\">${genre.name}</option>`;\n  });\n\n  // 📌 Tür seçildiğinde filtreyi uygula\n  genreFilter.addEventListener('change', filterLibraryByGenre);\n}\n\n// 📌 Seçilen Türe Göre Filmleri Filtrele\nfunction filterLibraryByGenre() {\n  const selectedGenre = document.getElementById('genreFilter').value;\n  let movies = JSON.parse(localStorage.getItem('myLibrary')) || [];\n\n  if (selectedGenre !== 'all') {\n    movies = movies.filter(movie =>\n      movie.genres.some(g => g.id == selectedGenre)\n    );\n  }\n\n  displayFilteredMovies(movies);\n}\n\n// 📌 Filtrelenen Filmleri Göster\nfunction displayFilteredMovies(movies) {\n  const libraryContainer = document.querySelector('.library-movies');\n  const emptyLibraryMessage = document.querySelector('.empty-library-message');\n\n  if (!libraryContainer || !emptyLibraryMessage) {\n    console.error('❌ Library container veya boş mesaj elementi bulunamadı!');\n    return;\n  }\n\n  if (movies.length === 0) {\n    emptyLibraryMessage.style.display = 'block';\n    libraryContainer.innerHTML = '<p>No movies found in this genre!</p>';\n    return;\n  } else {\n    emptyLibraryMessage.style.display = 'none';\n  }\n\n  // 📌 **Filmleri Listele**\n  libraryContainer.innerHTML = movies\n    .map(\n      movie => `\n        <li class=\"movie-card\">\n            <img src=\"https://image.tmdb.org/t/p/w500${movie.poster_path}\" alt=\"${movie.title}\">\n            <h3>${movie.title}</h3>\n            <p><strong>Release Date:</strong> ${movie.release_date}</p>\n            <button class=\"library-btn\" data-id=\"${movie.id}\">Remove Add Library</button>\n        </li>\n    `\n    )\n    .join('');\n\n  // 📌 **Remove butonlarına event listener ekle**\n  document.querySelectorAll('.library-btn').forEach(button => {\n    button.addEventListener('click', event => {\n      const movieId = Number(event.target.dataset.id);\n      removeMovieFromLibrary(movieId);\n      filterLibraryByGenre(); // 📌 Filtreyi güncelle\n    });\n  });\n}\n\n// 📌 Sayfa Yüklendiğinde Çalıştır\ndocument.addEventListener('DOMContentLoaded', () => {\n  if (document.getElementById('genreFilter')) {\n    populateGenreFilter();\n    filterLibraryByGenre(); // 📌 Varsayılan olarak tüm filmleri göster\n  }\n});\n\ndocument.addEventListener('DOMContentLoaded', function () {\n  const searchButton = document.querySelector('.search-button');\n\n  if (searchButton) {\n    searchButton.addEventListener('click', function () {\n      window.location.href = 'catalog.html'; // 📌 Catalog sayfasına yönlendir\n    });\n  }\n});\n","window.global ||= window;\n","import axios from 'axios';\n\nconst API_KEY = 'cacaf4fb30e4adeda0cb251474aaa7da';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nlet movieLibrary = JSON.parse(localStorage.getItem('movieLibrary')) || [];\n\nasync function fetchUpcomingMovies() {\n  try {\n    const response = await axios.get(`${BASE_URL}/movie/upcoming`, {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n        page: '1',\n      },\n    });\n\n    const movies = response.data.results;\n\n    let movieHTML = '';\n    if (movies.length > 0) {\n      const movie = movies[0]; // Sadece ilk filmi alıyoruz\n      const posterURL = movie.poster_path\n        ? `https://image.tmdb.org/t/p/w500${movie.poster_path}`\n        : 'https://via.placeholder.com/500x750?text=No+Image';\n      const isInLibrary = movieLibrary.some(\n        libMovie => libMovie.id === movie.id\n      );\n\n      movieHTML = `\n        <div class=\"UpcomingMovie\">\n          <img class=\"MoviePoster\" src=\"${posterURL}\" alt=\"${\n        movie.title\n      } Poster\" />\n          <h2 class=\"MovieTitle\">${movie.title}</h2>\n          <p class=\"ReleaseDate\">Release Date: ${movie.release_date}</p>\n          <p class=\"Overview\">${movie.overview}</p>\n          <button type=\"button\" class=\"addToLibraryButton\" data-movie-id=\"${\n            movie.id\n          }\">\n            ${isInLibrary ? 'Remove from library' : 'Add to my library'}\n          </button>\n        </div>`;\n    }\n\n    const updateDiv = document.querySelector('.movieInfoContent');\n    if (updateDiv) {\n      updateDiv.innerHTML = movieHTML;\n    }\n\n    document.querySelectorAll('.addToLibraryButton').forEach(button => {\n      button.addEventListener('click', handleLibraryAction);\n    });\n  } catch (error) {\n    console.error(\n      'Upcoming filmleri alırken hata oluştu:',\n      error.response ? error.response.data : error.message\n    );\n  }\n}\n\nfunction handleLibraryAction(event) {\n  const button = event.target;\n  const movieId = button.getAttribute('data-movie-id');\n  const movieTitle = button\n    .closest('.UpcomingMovie')\n    .querySelector('.MovieTitle').innerText;\n\n  const movie = {\n    id: movieId,\n    title: movieTitle,\n  };\n\n  const isInLibrary = movieLibrary.some(libMovie => libMovie.id === movie.id);\n\n  if (isInLibrary) {\n    movieLibrary = movieLibrary.filter(libMovie => libMovie.id !== movie.id);\n    button.innerText = 'Add to my library';\n  } else {\n    movieLibrary.push(movie);\n    button.innerText = 'Remove from library';\n  }\n\n  localStorage.setItem('movieLibrary', JSON.stringify(movieLibrary));\n}\n\nconst callUp = document.addEventListener(\n  'DOMContentLoaded',\n  fetchUpcomingMovies\n);\nexport default callUp;\n"],"names":["LIBRARY_KEY","getLibraryMovies","addMovieToLibrary","movie","movies","m","removeMovieFromLibrary","movieId","toggleLibrary","fetchGenres","toggle","body","yearDropdown","selectedYear","fetchMoviesByYear","apiKey","baseUrl","IMG_URL","fetchTrendingMovies","populateYearDropdown","currentYear","startYear","year","option","data","displayMovies","error","galleryMovies","modal","modalContent","closeModalButton","event","movieCard","movieData","fetchMovieDetails","showModal","_a","addToLibraryBtn","displayHeroMovie","title","backdrop_path","vote_average","overview","id","container","starRatingCalc","genreMap","genre","poster_path","release_date","genre_ids","starRating","genres","stars","menuToggle","mobilMenu","backdrop","mobilNav","isClickInsideMenu","isClickOnMenuToggle","searchForm","searchInput","searchInput2","closeIcon","movieContainer","query","searchMovies","paginationContainer","currentPage","maxPagesToFetch","totalPages","fetchMovies","page","renderPagination","paginationHTML","i","trailerBtn","openTrailerModal","iframe","trailer","video","closeModal","populateGenreFilter","genreFilter","g","filterLibraryByGenre","selectedGenre","displayFilteredMovies","libraryContainer","emptyLibraryMessage","button","searchButton","API_KEY","BASE_URL","movieLibrary","fetchUpcomingMovies","axios","movieHTML","posterURL","isInLibrary","libMovie","updateDiv","handleLibraryAction","movieTitle"],"mappings":"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"}